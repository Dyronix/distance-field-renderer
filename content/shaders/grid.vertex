#version 330
#extension GL_ARB_separate_shader_objects : enable
precision highp int;
precision highp float;
precision highp sampler3D;

in vec3 a_Position;
in vec3 a_Normal;
in vec3 a_Tangent;
in vec3 a_Binormal;
in vec2 a_TexCoord;

layout (std140) uniform Camera
{
	mat4 u_ViewProjectionMatrix;
	mat4 u_InverseViewProjection;
	mat4 u_ProjectionMatrix;
	mat4 u_ViewMatrix;
	mat4 u_WorldMatrix;
};

uniform mat4 u_Transform;

out vec3 v_Normal;
out vec3 v_Tangent;
out vec3 v_Binormal;
out vec2 v_TexCoord;

// ----------------------------------------------------------------------------
//
void main()
{
	vec4 position = u_ViewProjectionMatrix * u_Transform * vec4(a_Position, 1.0);
	gl_Position = position;

	v_Normal = vec3(a_Normal.x, a_Normal.y, a_Normal.z);
	v_Tangent = vec3(a_Tangent.x, a_Tangent.y, a_Tangent.z);
	v_Binormal = vec3(a_Binormal.x, a_Binormal.y, a_Binormal.z);
	v_TexCoord = vec2(a_TexCoord.x, a_TexCoord.y);
}
