#version 330
#extension GL_ARB_separate_shader_objects : enable
precision highp int;
precision highp float;
precision highp sampler3D;

layout (std140) uniform Camera
{
	mat4 u_ViewProjectionMatrix;
	mat4 u_InverseViewProjection;
	mat4 u_ProjectionMatrix;
	mat4 u_ViewMatrix;
	mat4 u_WorldMatrix;
};

in vec3 a_Position;
in vec2 a_TexCoord;

uniform mat4 u_camera_frustrum;

out vec2 v_texcoord;
out vec4 v_world_ray;

out mat4 v_camera_world;
out mat4 v_camera_view;
out mat4 v_camera_projection;

// ----------------------------------------------------
//
void main() 
{  
	gl_Position = vec4(vec3(a_Position.x, a_Position.y, 0.0), 1);

	int index = int(floor(a_Position.z));

	vec4 ray;
	ray = vec4(u_camera_frustrum[index].xyz, 0.0);
	ray /= abs(ray.z);
	
	v_texcoord = a_TexCoord;
	v_world_ray = u_WorldMatrix * ray;
	v_camera_world = u_WorldMatrix;
	v_camera_view = u_ViewMatrix;
	v_camera_projection = u_ProjectionMatrix;
}